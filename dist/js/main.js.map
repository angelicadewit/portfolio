{"version":3,"sources":["main.js"],"names":["app","PIXI","Application","view","document","getElementById","width","height","transparent","fogContainer","Container","x","y","snowContainer","stage","addChild","manifest","loadAssets","loader","add","load","onAssetsLoaded","resources","console","log","setupTreesRowOne","setupFogOne","ticker","e","update","vidTex","Texture","fromVideo","inkblot","data","vid","Sprite","baseTexture","source","setAttribute","fogOne","texture","alpha","TweenMax","fromTo","repeat","ease","Linear","easeNone","mask","tree","i","treeThree","anchor","set","spacing","xOffset","randomInt","renderer","setupTreesRowTwo","setupFox","fox","foxTwo","min","max","Math","floor","random","resize","canvasAspect","screen","screenAspect","window","innerWidth","innerHeight","scale","style","transform","addEventListener","onload"],"mappings":"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","file":"main.js","sourcesContent":["const app = new PIXI.Application({\n    view: document.getElementById(\"backgroundCanvas\"),\n    width: 1280,\n    height: 720,\n    transparent: true,\n})\n\nconst fogContainer = new PIXI.Container();\nfogContainer.x = 500\nfogContainer.y = 400\n\nconst snowContainer = new PIXI.Container();\nsnowContainer.x = 500\nsnowContainer.y = 400\n\napp.stage.addChild(fogContainer)\napp.stage.addChild(snowContainer)\n\n\n\n\nlet manifest = [\n    {\n        \"key\": \"fox\",\n        \"url\": \"dist/img/fox-1.png\"\n    },\n    {\n        \"key\": \"foxTwo\",\n        \"url\": \"dist/img/fox.png\"\n    },\n    {\n        \"key\": \"treeOne\",\n        \"url\": \"dist/img/tree1.png\"\n    },\n    {\n        \"key\": \"treeTwo\",\n        \"url\": \"dist/img/tree2.png\"\n    },\n    {\n        \"key\": \"treeThree\",\n        \"url\": \"dist/img/tree3.png\"\n    },\n    {\n        \"key\": \"foreground\",\n        \"url\": \"dist/img/background.jpg\"\n    },\n    {\n        \"key\": \"fogOne\",\n        \"url\": \"dist/img/fog1.png\"\n    },\n    {\n        \"key\": \"inkblot\",\n        \"url\": \"dist/img/inkblot.mp4\"\n    }\n\n]\n\n\n// let treeOne = new PIXI.Sprite(app.loader.resources.treeOne.texture)\n// let treeTwo = new PIXI.Sprite(app.loader.resources.treeTwo.texture)\n// let treeThree = new PIXI.Sprite(app.loader.resources.treeThree.texture)\n\nfunction loadAssets(){\n    app.loader.add(manifest)\n    app.loader.load(onAssetsLoaded)\n}\n\n// let snowEmitter= new PIXI.particles.Emitter(\n//     snowContainer,\n//     [PIXI.Texture.fromImage('dist/img/snow100.png')],\n//     {\n//         \"alpha\": {\n//             \"start\": 1,\n//             \"end\": 0\n//         },\n//         \"scale\": {\n//             \"start\": 0.07,\n//             \"end\": 0.32,\n//             \"minimumScaleMultiplier\": 1\n//         },\n//         \"color\": {\n//             \"start\": \"#002c38\",\n//             \"end\": \"#d2eff0\"\n//         },\n//         \"speed\": {\n//             \"start\": 183,\n//             \"end\": 34,\n//             \"minimumSpeedMultiplier\": 1\n//         },\n//         \"acceleration\": {\n//             \"x\": -10,\n//             \"y\": 0\n//         },\n//         \"maxSpeed\": 0,\n//         \"startRotation\": {\n//             \"min\": 0,\n//             \"max\": 355\n//         },\n//         \"noRotation\": true,\n//         \"rotationSpeed\": {\n//             \"min\": 4,\n//             \"max\": 0\n//         },\n//         \"lifetime\": {\n//             \"min\": 0.15,\n//             \"max\": 0.8\n//         },\n//         \"blendMode\": \"normal\",\n//         \"frequency\": 0.001,\n//         \"emitterLifetime\": -1,\n//         \"maxParticles\": 500,\n//         \"pos\": {\n//             \"x\": 0,\n//             \"y\": 0\n//         },\n//         \"addAtBack\": false,\n//         \"spawnType\": \"circle\",\n//         \"autoUpdate\": true,\n//         \"spawnCircle\": {\n//             \"x\": 0,\n//             \"y\": 0,\n//             \"r\": 0\n//         },\n//     }\n// );\n\n// snowEmitter.emit = false;\n\nfunction onAssetsLoaded(loader, resources){\n    console.log(resources)\n\n    setupTreesRowOne()\n    \n    setupFogOne()\n    \n    // setupFox()\n\n    app.ticker.add((e) => update(e))\n}\n\nfunction setupFogOne(){\n\n    let vidTex = new PIXI.Texture.fromVideo(app.loader.resources.inkblot.data)\n    let vid = new PIXI.Sprite(vidTex)\n\n    // vid.anchor.set(0.2)\n    app.stage.addChild(vid)\n\n\n    vidTex.baseTexture.source.setAttribute(\"loop\",\"\")\n    // vidTex.baseTexture.source.playbackRate = 2\n\n    let fogOne = new PIXI.Sprite(app.loader.resources.fogOne.texture)\n    fogOne.alpha = 0.7\n    fogOne.y = 150\n    app.stage.addChild(fogOne)\n\n\n    TweenMax.fromTo(fogOne, 50,\n        {\n            x:-1000,\n        },\n        {\n            x:1000,\n            repeat: -1,\n            ease: Linear.easeNone,\n            repeat: true,\n        })\n\n    fogOne.mask = vid\n}\n\n\nfunction setupTreesRowOne(){\n    console.log(`one`)\n    \n    let tree;\n    for (let i = 0; i < 30; i++){\n        tree = new PIXI.Sprite(app.loader.resources.treeThree.texture)\n        tree.anchor.set(0.5,1)\n        let spacing = 50\n        let xOffset = 10\n        tree.x = randomInt(200, app.renderer.height - tree.width)\n        tree.y = randomInt(300, app.renderer.height - tree.height)\n        app.stage.addChild(tree)\n    }\n}\n\nfunction setupTreesRowTwo(){\n    console.log(`two`)\n    \n    let tree;\n    for (let i = 0; i < 15; i++){\n        tree = new PIXI.Sprite(app.loader.resources.treeThree.texture)\n        tree.anchor.set(0.5,1)\n        tree.x = 150 + (i * 70)\n        tree.y = 610\n        app.stage.addChild(tree)\n    }\n}\n\nfunction setupFox(){\n    let fox = new PIXI.Sprite(app.loader.resources.foxTwo.texture)\n    fox.x = 600\n    fox.y = 350\n    app.stage.addChild(fox)\n}\n\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n\n\nfunction update(e){\n\n}\n\nfunction resize(e){\n    let canvasAspect = app.screen.width / app.screen.height\n    let screenAspect = window.innerWidth / window.innerHeight\n    let scale = 1\n\n    if (screenAspect > canvasAspect) {\n        //screen is wider than canvas. we need to match the width of the screen\n        scale = window.innerWidth / app.screen.width\n    } else {\n        //screen is taller than canvas. we need to match the height of the screen\n        scale = window.innerHeight / app.screen.height\n    }\n\n    app.view.style.transform = \"scale(\" + scale + \")\"\n}\n\nwindow.addEventListener(`click`, function(e){\n    // snowEmitter.emit = !snowEmitter.emit\n})\n\n\nwindow.onload = function(){\n    window.addEventListener(\"resize\", resize)\n    resize()\n    loadAssets()\n}"]}