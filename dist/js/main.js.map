{"version":3,"sources":["main.js"],"names":["app","PIXI","Application","view","document","getElementById","width","height","transparent","container","Container","manifest","loadAssets","loader","add","load","onAssetsLoaded","resources","console","log","setupBackground","setupTreesRowTwo","setupTreeRowOne","ticker","e","update","bg","Sprite","background","texture","mask","setupTreesRowOne","tree","i","treeThree","x","y","stage","addChild","resize","canvasAspect","screen","screenAspect","window","innerWidth","innerHeight","scale","style","transform","onload","addEventListener","emitter","particles","Emitter","Texture","fromImage"],"mappings":"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","file":"main.js","sourcesContent":["const app = new PIXI.Application({\n    view: document.getElementById(\"backgroundCanvas\"),\n    width: 1280,\n    height: 720,\n    transparent: true,\n})\n\nconst container = new PIXI.Container();\n// emitter.emit = true;\n\nlet manifest = [\n    {\n        \"key\": \"fox\",\n        \"url\": \"dist/img/fox-1.png\"\n    },\n    {\n        \"key\": \"foxTwo\",\n        \"url\": \"dist/img/fox.png\"\n    },\n    {\n        \"key\": \"treeOne\",\n        \"url\": \"dist/img/tree1.png\"\n    },\n    {\n        \"key\": \"treeTwo\",\n        \"url\": \"dist/img/tree2.png\"\n    },\n    {\n        \"key\": \"treeThree\",\n        \"url\": \"dist/img/tree3.png\"\n    },\n    {\n        \"key\": \"background\",\n        \"url\": \"dist/img/background.jpg\"\n    },\n]\n\n\n// let treeOne = new PIXI.Sprite(app.loader.resources.treeOne.texture)\n// let treeTwo = new PIXI.Sprite(app.loader.resources.treeTwo.texture)\n// let treeThree = new PIXI.Sprite(app.loader.resources.treeThree.texture)\n\nfunction loadAssets(){\n    app.loader.add(manifest)\n    app.loader.load(onAssetsLoaded)\n}\n\nfunction onAssetsLoaded(loader, resources){\n    console.log(resources)\n\n    setupBackground()\n\n    setupTreesRowTwo()\n\n    setupTreeRowOne()\n\n    app.ticker.add((e) => update(e))\n}\n\nfunction setupBackground(){\n    let bg = new PIXI.Sprite(app.loader.resources.background.texture)\n    // bg.height = 1000;\n    bg.mask = mask\n}\n\nfunction setupTreesRowOne(){\n    \n    let tree;\n    for (let i = 0; i < 10; i++){\n        tree = new PIXI.Sprite(app.loader.resources.treeThree.texture)\n\n        tree.x = 150 + (i * 100)\n        tree.y = 100\n        app.stage.addChild(tree)\n    }\n}\n\nfunction setupTreesRowTwo(){\n    \n    let tree;\n    for (let i = 0; i < 15; i++){\n        tree = new PIXI.Sprite(app.loader.resources.treeThree.texture)\n\n        tree.x = 150 + (i * 70)\n        tree.y = 60\n        app.stage.addChild(tree)\n    }\n}\n\n\n\nfunction update(e){\n\n}\n\nfunction resize(e){\n    let canvasAspect = app.screen.width / app.screen.height\n    let screenAspect = window.innerWidth / window.innerHeight\n    let scale = 1\n\n    if (screenAspect > canvasAspect) {\n        //screen is wider than canvas. we need to match the width of the screen\n        scale = window.innerWidth / app.screen.width\n    } else {\n        //screen is taller than canvas. we need to match the height of the screen\n        scale = window.innerHeight / app.screen.height\n    }\n\n    app.view.style.transform = \"scale(\" + scale + \")\"\n}\n\n\nwindow.onload = function(){\n    window.addEventListener(\"resize\", resize)\n    resize()\n    loadAssets()\n}\n\n\nvar emitter = new PIXI.particles.Emitter(\n    container,\n    [PIXI.Texture.fromImage('dist/img/snow100.png')],\n    {\n        \"alpha\": {\n            \"start\": 1,\n            \"end\": 0\n        },\n        \"scale\": {\n            \"start\": 0.07,\n            \"end\": 0.32,\n            \"minimumScaleMultiplier\": 1\n        },\n        \"color\": {\n            \"start\": \"#002c38\",\n            \"end\": \"#d2eff0\"\n        },\n        \"speed\": {\n            \"start\": 183,\n            \"end\": 34,\n            \"minimumSpeedMultiplier\": 1\n        },\n        \"acceleration\": {\n            \"x\": -10,\n            \"y\": 0\n        },\n        \"maxSpeed\": 0,\n        \"startRotation\": {\n            \"min\": 0,\n            \"max\": 355\n        },\n        \"noRotation\": true,\n        \"rotationSpeed\": {\n            \"min\": 4,\n            \"max\": 0\n        },\n        \"lifetime\": {\n            \"min\": 0.15,\n            \"max\": 0.8\n        },\n        \"blendMode\": \"normal\",\n        \"frequency\": 0.001,\n        \"emitterLifetime\": -1,\n        \"maxParticles\": 500,\n        \"pos\": {\n            \"x\": 0,\n            \"y\": 0\n        },\n        \"addAtBack\": false,\n        \"spawnType\": \"circle\",\n        \"spawnCircle\": {\n            \"x\": 0,\n            \"y\": 0,\n            \"r\": 0\n        }\n    }\n);\n"]}